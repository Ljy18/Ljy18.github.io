[{"title":"If与while","url":"/post/If%20and%20while/","content":"<h2 id=\"IF与while的区别\"><a href=\"#IF与while的区别\" class=\"headerlink\" title=\"IF与while的区别\"></a>IF与while的区别</h2><h3 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h3><blockquote>\n<ol>\n<li>用于循环语句,这个它会多次执行,而if用于判断(就是独立判断时只执行一次)和分支语句.</li>\n<li>这个两者最大的相同就是至少有一次的判断</li>\n<li>while循环的执行语句中,应当包含一个变量,该变量的值应该是变化的,可影响while的判断,让其不陷入于死循环.</li>\n</ol>\n</blockquote>\n<h3 id=\"do-while与while\"><a href=\"#do-while与while\" class=\"headerlink\" title=\"do while与while\"></a>do while与while</h3><blockquote>\n<ul>\n<li>就是while是向判断再执行而do while是先执行再判断.</li>\n</ul>\n</blockquote>\n","categories":["Cpp"],"tags":["Cpp","Difficult points"]},{"title":"LaTeX数学公式大全","url":"/post/LaTeX%20Mathematical%20formula/","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>LaTeX是一套非常优秀的排版系统， 通过它排版的图书和论文会变得非常漂亮和易读。 而LaTeX在编写数学公式的易用性和通用性，使我对它产生了浓厚的兴趣。 这篇文章主要介绍了LaTeX公式编辑在MarkDown下的使用语法和方法。<br>以下的例子是在Sublime Text3上编写， 并测试的结果， 当然你也可以在任何引入MathJax的MarkDown编辑器上测试。</p>\n<span id=\"more\"></span> //启动摘要和不展示全文的小技巧\n\n<h3 id=\"1-显示方法\"><a href=\"#1-显示方法\" class=\"headerlink\" title=\"1.显示方法\"></a>1.显示方法</h3><ul>\n<li>嵌入文字显示：<code>$...$</code><br>eg: <code>$\\sum^n_&#123;i=1&#125;x^i=1$</code> &#x3D;&#x3D;&gt; $\\sum^n_{i&#x3D;1}x^i&#x3D;1$ </li>\n<li>单行显示： <code>$$...$$</code><br>eg: <code>$ $\\sum^n_&#123;i=1&#125;x^i=1$ $</code> &#x3D;&#x3D;&gt; $$\\sum^n_{i&#x3D;1}x^i&#x3D;1$$</li>\n<li>带序号显示：<code>\\begin&#123;equation&#125;...\\end&#123;equation&#125;</code><br>eg:<br><code>\\begin&#123;equation&#125;\\sum^n_&#123;i=1&#125;x^i=1\\end&#123;equation&#125;</code> &#x3D;&#x3D;&gt; \\begin{equation}\\sum^n_{i&#x3D;1}x^i&#x3D;1\\end{equation}<br><code>\\begin&#123;equation&#125;\\x+y=z\\end&#123;equation&#125;</code> &#x3D;&#x3D;&gt; \\begin{equation}x+y&#x3D;z\\end{equation}</li>\n</ul>\n<h3 id=\"2-通用显示规则\"><a href=\"#2-通用显示规则\" class=\"headerlink\" title=\"2.通用显示规则\"></a>2.通用显示规则</h3><ul>\n<li><code>^</code> &#x3D;&gt; 上标</li>\n<li><code>_</code> &#x3D;&gt; 下标</li>\n<li><code>&#123;&#125;</code> &#x3D;&gt; 包括</li>\n<li><code>~</code> &#x3D;&gt; 空格</li>\n<li><code>\\</code> &#x3D;&gt; 转移符号</li>\n</ul>\n<h3 id=\"3-增强型显示规则\"><a href=\"#3-增强型显示规则\" class=\"headerlink\" title=\"3.增强型显示规则\"></a>3.增强型显示规则</h3><ul>\n<li><p>\\sqrt 求根<br>eg: <code>$\\sqrt&#123;x+y&#125;$</code>&#x3D;&#x3D;&gt; $\\sqrt{x+y}$<br>eg: <code>$\\sqrt[3]&#123;x+y&#125;$</code>&#x3D;&#x3D;&gt; $\\sqrt[3]{x+y}$</p>\n</li>\n<li><p>\\frac \\over 分数形式<br>eg: <code>$\\frac&#123;a+1&#125;&#123;b+2&#125;$</code> &#x3D;&#x3D;&gt; $\\frac{a+1}{b+2}$<br>eg: <code>$&#123;a+1&#125;\\over&#123;b+2&#125;$</code> &#x3D;&#x3D;&gt; ${a+1}\\over{b+2}$</p>\n</li>\n<li><p>\\sum 求和<br>eg: <code>$\\sum$</code>&#x3D;&#x3D;&gt; $\\sum$</p>\n</li>\n<li><p>\\prod 求积<br>eg: <code>$\\prod^n_&#123;i=1&#125;i+1=1$</code> &#x3D;&#x3D;&gt; $\\prod^n_{i&#x3D;1}i+1&#x3D;1$</p>\n</li>\n<li><p>\\int 求积分<br>eg: <code>$\\int x+1$</code> &#x3D;&#x3D;&gt; $\\int x+1$</p>\n</li>\n<li><p>\\iint 求积分<br>eg: <code>$\\iint x+1$</code> &#x3D;&#x3D;&gt; $\\iint x+1$ </p>\n</li>\n<li><p>\\bigcup 并集<br>eg: <code>$A\\bigcup B$</code> &#x3D;&#x3D;&gt; $A\\bigcup B$</p>\n</li>\n<li><p>\\cup 并集<br>eg: <code>$A\\cup B$</code> &#x3D;&#x3D;&gt; $A\\cup B$</p>\n</li>\n<li><p>\\cap 交集<br>eg: <code>$A\\cap B$</code> &#x3D;&#x3D;&gt; $A\\cap B$</p>\n</li>\n<li><p>\\bigcap 交集<br>eg: <code>$A\\bigcap B$</code> &#x3D;&#x3D;&gt; $A\\bigcap B$</p>\n</li>\n<li><p>\\to 箭头<br>eg: <code>$A\\to B$</code> &#x3D;&#x3D;&gt; $A\\to B$</p>\n</li>\n<li><p>\\lim<br>eg: <code>$\\lim_&#123;0\\to 100&#125;$</code> &#x3D;&#x3D;&gt;  $\\lim_{0\\to 100}$</p>\n</li>\n<li><p>\\ln<br>eg: <code>$\\ln_&#123;0\\to 100&#125;$</code> &#x3D;&#x3D;&gt;  $\\ln_{0\\to 100}$</p>\n</li>\n<li><p>\\sin<br>eg: <code>$\\sin x$</code> &#x3D;&#x3D;&gt;  $\\sin x$</p>\n</li>\n<li><p>\\cos<br>eg: <code>$\\cos x$</code> &#x3D;&#x3D;&gt;  $\\cos x$</p>\n</li>\n<li><p>\\qquad 8m空格</p>\n</li>\n<li><p>\\quad 4m空格</p>\n</li>\n<li><p>\\times 乘号<br>eg: <code>$a \\times b$</code>&#x3D;$a \\times b$</p>\n</li>\n<li><p>\\div  除号\t<br>eg: <code>$a\\div b$</code>&#x3D;$a\\div b$</p>\n</li>\n<li><p>\\{\\} 花括号显示<br>eg: <code>$\\\\&#123; hello \\\\&#125;$</code> &#x3D;&#x3D;&gt; $\\{ hello \\}$<br><em>注意：在这里我测试的Sublime Text3编写输出的结果， 如果在其他MarkDown编辑器可能要使用单反斜杠</em></p>\n</li>\n<li><p>小括号增强<br>eg: <code>$\\left( hello\\right)$</code> &#x3D;&#x3D;&gt; $\\left( hello\\right)$</p>\n</li>\n<li><p>中括号增强<br>eg: <code> $\\left[hello\\right]$</code> &#x3D;&#x3D;&gt; $\\left[hello\\right]$</p>\n</li>\n<li><p>绝对值增强<br>eg: <code>$\\left|hello\\right|$</code> &#x3D;&#x3D;&gt; $\\left|hello\\right|$</p>\n</li>\n<li><p>尖括号<br>eg: <code>$\\langle hello\\rangle$</code> &#x3D;&#x3D;&gt; $\\langle hello\\rangle$</p>\n</li>\n<li><p>向上取整<br>eg: <code>$\\lceil hello\\rceil$</code> &#x3D;&#x3D;&gt; $\\lceil hello\\rceil$</p>\n</li>\n<li><p>向下取整<br>eg: <code>$\\lfloor hllo\\rfloor$</code> &#x3D;&#x3D;&gt; $\\lfloor hllo\\rfloor$</p>\n</li>\n</ul>\n<h3 id=\"4-数学符号表一\"><a href=\"#4-数学符号表一\" class=\"headerlink\" title=\"4.数学符号表一\"></a>4.数学符号表一</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>显示方法</th>\n<th>符号</th>\n<th>显示方法</th>\n<th>符号</th>\n<th>显示方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$\\pm$</td>\n<td><code>\\pm</code></td>\n<td>$\\mp$</td>\n<td><code>\\mp</code></td>\n<td>$\\times$</td>\n<td><code>\\times</code></td>\n</tr>\n<tr>\n<td>$\\div$</td>\n<td><code>\\div</code></td>\n<td>$\\ast$</td>\n<td><code>\\ast</code></td>\n<td>$\\star$</td>\n<td><code>\\star</code></td>\n</tr>\n<tr>\n<td>$\\circ$</td>\n<td><code>\\circ</code></td>\n<td>$\\bullet$</td>\n<td><code>\\bullet</code></td>\n<td>$\\cdot$</td>\n<td><code>\\cdot</code></td>\n</tr>\n<tr>\n<td>$\\oplus$</td>\n<td><code>\\oplus</code></td>\n<td>$\\oslash$</td>\n<td><code>\\oslash</code></td>\n<td>$\\dagger$</td>\n<td><code>\\dagger</code></td>\n</tr>\n<tr>\n<td>$+$</td>\n<td><code>+</code></td>\n<td>$-$</td>\n<td><code>-</code></td>\n<td>$\\cap$</td>\n<td><code>\\cap</code></td>\n</tr>\n<tr>\n<td>$\\cup$</td>\n<td><code>\\cup</code></td>\n<td>$\\ddagger$</td>\n<td><code>\\ddagger</code></td>\n<td>$\\diamond$</td>\n<td><code>\\diamond</code></td>\n</tr>\n<tr>\n<td>$\\uplus$</td>\n<td><code>\\uplus</code></td>\n<td>$\\sqcap$</td>\n<td><code>\\sqcap</code></td>\n<td>$\\sqcup$</td>\n<td><code>\\sqcup</code></td>\n</tr>\n<tr>\n<td>$\\vee$</td>\n<td><code>\\vee</code></td>\n<td>$\\wedge$</td>\n<td><code>\\wedge</code></td>\n<td>$\\setminus$</td>\n<td><code>\\setminus</code></td>\n</tr>\n<tr>\n<td>$\\wr$</td>\n<td><code>\\wr</code></td>\n<td>$\\ominus$</td>\n<td><code>\\ominus</code></td>\n<td>$\\odot$</td>\n<td><code>\\odot</code></td>\n</tr>\n<tr>\n<td>$\\bigtriangleup$</td>\n<td><code>\\bigtriangleup</code></td>\n<td>$\\bigtriangledown$</td>\n<td><code>\\bigtriangledown</code></td>\n<td>$\\triangleleft$</td>\n<td><code>\\triangleleft</code></td>\n</tr>\n<tr>\n<td>$\\triangleright$</td>\n<td><code>\\triangleright</code></td>\n<td>$\\lhd$</td>\n<td><code>\\lhd</code></td>\n<td>$\\rhd$</td>\n<td><code>\\rhd</code></td>\n</tr>\n<tr>\n<td>$\\unlhd$</td>\n<td><code>\\unlhd</code></td>\n<td>$\\unrhd$</td>\n<td><code>\\unrhd</code></td>\n<td>$\\otimes$</td>\n<td><code>\\otimes</code></td>\n</tr>\n<tr>\n<td>$\\bigcirc$</td>\n<td><code>\\bigcirc</code></td>\n<td>$\\amalg$</td>\n<td><code>\\amalg</code></td>\n<td>$\\sum$</td>\n<td><code>\\sum</code></td>\n</tr>\n<tr>\n<td>$\\prod$</td>\n<td><code>\\prod</code></td>\n<td>$\\coprod$</td>\n<td><code>\\coprod</code></td>\n<td>$\\int$</td>\n<td><code>\\int</code></td>\n</tr>\n<tr>\n<td>$\\oint$</td>\n<td><code>\\oint</code></td>\n<td>$\\bigcap$</td>\n<td><code>\\bigcap</code></td>\n<td>$\\bigcup$</td>\n<td><code>\\bigcup</code></td>\n</tr>\n<tr>\n<td>$\\bigsqcup$</td>\n<td><code>\\bigsqcup</code></td>\n<td>$\\bigvee$</td>\n<td><code>\\bigvee</code></td>\n<td>$\\bigwedge$</td>\n<td><code>\\bigwedge</code></td>\n</tr>\n<tr>\n<td>$\\bigodot$</td>\n<td><code>\\bigodot</code></td>\n<td>$\\bigotimes$</td>\n<td><code>\\bigotimes</code></td>\n<td>$\\bigoplus$</td>\n<td><code>\\bigoplus</code></td>\n</tr>\n<tr>\n<td>$\\biguplus$</td>\n<td><code>\\biguplus</code></td>\n<td>$\\leq$</td>\n<td><code>\\leq</code></td>\n<td>$\\geq$</td>\n<td><code>\\geq</code></td>\n</tr>\n<tr>\n<td>$\\equiv$</td>\n<td><code>\\equiv</code></td>\n<td>$\\prec$</td>\n<td><code>\\prec</code></td>\n<td>$\\succ$</td>\n<td><code>\\cucc</code></td>\n</tr>\n<tr>\n<td>$\\sim$</td>\n<td><code>\\sim</code></td>\n<td>$\\preceq$</td>\n<td><code>\\preceq</code></td>\n<td>$\\succeq$</td>\n<td><code>\\succeq</code></td>\n</tr>\n<tr>\n<td>$\\simeq$</td>\n<td><code>\\simeq</code></td>\n<td>$\\ll$</td>\n<td><code>\\ll</code></td>\n<td>$\\gg$</td>\n<td><code>\\gg</code></td>\n</tr>\n<tr>\n<td>$\\asymp$</td>\n<td><code>\\asymp</code></td>\n<td>$\\subset$</td>\n<td><code>\\subset</code></td>\n<td>$\\supset$</td>\n<td><code>\\supset</code></td>\n</tr>\n<tr>\n<td>$\\approx$</td>\n<td><code>\\approx</code></td>\n<td>$\\subseteq$</td>\n<td><code>\\subseteq</code></td>\n<td>$\\supseteq$</td>\n<td><code>\\subseteq</code></td>\n</tr>\n<tr>\n<td>$\\cong$</td>\n<td><code>\\cong</code></td>\n<td>$\\sqsubset$</td>\n<td><code>\\sqsubset</code></td>\n<td>$\\sqsupset$</td>\n<td><code>\\sqsupset</code></td>\n</tr>\n<tr>\n<td>$\\neq$</td>\n<td><code>\\neq</code></td>\n<td>$\\sqsubseteq$</td>\n<td><code>\\sqsubseteq</code></td>\n<td>$\\sqsupseteq$</td>\n<td><code>\\sqsupseteq</code></td>\n</tr>\n<tr>\n<td>$\\doteq$</td>\n<td><code>\\doteq</code></td>\n<td>$\\in$</td>\n<td><code>\\in</code></td>\n<td>$\\ni$</td>\n<td><code>\\ni</code></td>\n</tr>\n<tr>\n<td>$\\notin$</td>\n<td><code>\\notin</code></td>\n<td>$\\vdash$</td>\n<td><code>\\vdash</code></td>\n<td>$\\dashv$</td>\n<td><code>\\dashv</code></td>\n</tr>\n<tr>\n<td>$:$</td>\n<td><code>:</code></td>\n<td>$\\models$</td>\n<td><code>\\models</code></td>\n<td>$\\perp$</td>\n<td><code>\\perp</code></td>\n</tr>\n<tr>\n<td>$\\mid$</td>\n<td><code>\\mid</code></td>\n<td>$\\parallel$</td>\n<td><code>\\parallel</code></td>\n<td>$\\bowtie$</td>\n<td><code>\\bowtie</code></td>\n</tr>\n<tr>\n<td>$\\Join$</td>\n<td><code>\\Join</code></td>\n<td>$\\smile$</td>\n<td><code>\\smile</code></td>\n<td>$\\frown$</td>\n<td><code>\\frown</code></td>\n</tr>\n<tr>\n<td>$\\propto$</td>\n<td><code>\\propto</code></td>\n<td>$&lt;$</td>\n<td><code>&lt;</code></td>\n<td>$&gt;$</td>\n<td><code>&gt;</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"5-数学符号表二\"><a href=\"#5-数学符号表二\" class=\"headerlink\" title=\"5.数学符号表二\"></a>5.数学符号表二</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>显示方法</th>\n<th>符号</th>\n<th>显示方法</th>\n<th>符号</th>\n<th>显示方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$\\arccos$</td>\n<td><code>\\arccos</code></td>\n<td>$\\arcsin$</td>\n<td><code>\\arcsin</code></td>\n<td>$\\arctan$</td>\n<td><code>\\arctan</code></td>\n</tr>\n<tr>\n<td>$\\arg$</td>\n<td><code>\\arg</code></td>\n<td>$\\cos$</td>\n<td><code>\\cos</code></td>\n<td>$\\cosh$</td>\n<td><code>\\cosh</code></td>\n</tr>\n<tr>\n<td>$\\cot$</td>\n<td><code>\\cot</code></td>\n<td>$\\coth$</td>\n<td><code>\\coth</code></td>\n<td>$\\csc$</td>\n<td><code>\\csc</code></td>\n</tr>\n<tr>\n<td>$\\deg$</td>\n<td><code>\\deg</code></td>\n<td>$\\det$</td>\n<td><code>\\det</code></td>\n<td>$\\dim$</td>\n<td><code>\\dim</code></td>\n</tr>\n<tr>\n<td>$\\exp$</td>\n<td><code>\\exp</code></td>\n<td>$\\gcd$</td>\n<td><code>\\gcd</code></td>\n<td>$\\hom$</td>\n<td><code>\\hom</code></td>\n</tr>\n<tr>\n<td>$\\inf$</td>\n<td><code>\\inf</code></td>\n<td>$\\ker$</td>\n<td><code>\\ker</code></td>\n<td>$\\lg$</td>\n<td><code>\\lg</code></td>\n</tr>\n<tr>\n<td>$\\lim$</td>\n<td><code>\\lim</code></td>\n<td>$\\liminf$</td>\n<td><code>\\liminf</code></td>\n<td>$\\limsup$</td>\n<td><code>\\limsup</code></td>\n</tr>\n<tr>\n<td>$\\ln$</td>\n<td><code>\\ln</code></td>\n<td>$\\log$</td>\n<td><code>\\log</code></td>\n<td>$\\max$</td>\n<td><code>\\max</code></td>\n</tr>\n<tr>\n<td>$\\min$</td>\n<td><code>\\min</code></td>\n<td>$\\Pr$</td>\n<td><code>\\pr</code></td>\n<td>$\\sec$</td>\n<td><code>\\sec</code></td>\n</tr>\n<tr>\n<td>$\\sin$</td>\n<td><code>\\sin</code></td>\n<td>$\\sinh$</td>\n<td><code>\\sinh</code></td>\n<td>$\\sup$</td>\n<td><code>\\sup</code></td>\n</tr>\n<tr>\n<td>$\\tan$</td>\n<td><code>\\tan</code></td>\n<td>$\\tanh$</td>\n<td><code>\\tanh</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n</tbody></table>\n<h3 id=\"5-箭头符号表\"><a href=\"#5-箭头符号表\" class=\"headerlink\" title=\"5.箭头符号表\"></a>5.箭头符号表</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>显示方法</th>\n<th>符号</th>\n<th>显示方法</th>\n<th>符号</th>\n<th>显示方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$\\leftarrow$</td>\n<td><code>\\leftarrow</code></td>\n<td>$\\longleftarrow$</td>\n<td><code>\\longleftarrow</code></td>\n<td>$\\Leftarrow$</td>\n<td><code>\\Leftarrow</code></td>\n</tr>\n<tr>\n<td>$\\Longleftarrow$</td>\n<td><code>\\Longleftarrow</code></td>\n<td>$\\rightarrow$</td>\n<td><code>\\rightarrow</code></td>\n<td>$\\longrightarrow$</td>\n<td><code>\\longrightarrow</code></td>\n</tr>\n<tr>\n<td>$\\Rightarrow$</td>\n<td><code>\\Rightarrow</code></td>\n<td>$\\Longrightarrow$</td>\n<td><code>\\Longrightarrow</code></td>\n<td>$\\leftrightarrow$</td>\n<td><code>\\leftrightarrow</code></td>\n</tr>\n<tr>\n<td>$\\longleftrightarrow$</td>\n<td><code>\\longleftrightarrow</code></td>\n<td>$\\Leftrightarrow$</td>\n<td><code>\\Leftrightarrow</code></td>\n<td>$\\Longleftrightarrow$</td>\n<td><code>\\Longleftrightarrow</code></td>\n</tr>\n<tr>\n<td>$\\mapsto$</td>\n<td><code>\\mapsto</code></td>\n<td>$\\longmapsto$</td>\n<td><code>\\longmapsto</code></td>\n<td>$\\hookleftarrow$</td>\n<td><code>\\hookleftarrow</code></td>\n</tr>\n<tr>\n<td>$\\hookrightarrow$</td>\n<td><code>\\hookrightarrow</code></td>\n<td>$\\leftharpoonup$</td>\n<td><code>\\leftharpoonup</code></td>\n<td>$\\rightharpoonup$</td>\n<td><code>\\rightharpoonup</code></td>\n</tr>\n<tr>\n<td>$\\leftharpoondown$</td>\n<td><code>\\leftharpoondown</code></td>\n<td>$\\rightharpoondown$</td>\n<td><code>\\rightharpoondown</code></td>\n<td>$\\rightleftharpoons$</td>\n<td><code>\\rightleftharpoons</code></td>\n</tr>\n<tr>\n<td>$\\leadsto$</td>\n<td><code>\\leadsto</code></td>\n<td>$\\uparrow$</td>\n<td><code>\\uparrow</code></td>\n<td>$\\downarrow$</td>\n<td><code>\\downarrow</code></td>\n</tr>\n<tr>\n<td>$\\Uparrow$</td>\n<td><code>\\Uparrow</code></td>\n<td>$\\Downarrow$</td>\n<td><code>\\Downarrow</code></td>\n<td>$\\updownarrow$</td>\n<td><code>\\updownarrow</code></td>\n</tr>\n<tr>\n<td>$\\Updownarrow$</td>\n<td><code>\\Updownarrow</code></td>\n<td>$\\nwarrow$</td>\n<td><code>\\nwarrow</code></td>\n<td>$\\nearrow$</td>\n<td><code>\\nearrow</code></td>\n</tr>\n<tr>\n<td>$\\swarrow$</td>\n<td><code>\\swarrow</code></td>\n<td>$\\searrow$</td>\n<td><code>\\searrow</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n</tbody></table>\n<h3 id=\"6-特殊符号表\"><a href=\"#6-特殊符号表\" class=\"headerlink\" title=\"6.特殊符号表\"></a>6.特殊符号表</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>显示方法</th>\n<th>符号</th>\n<th>显示方法</th>\n<th>符号</th>\n<th>显示方法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$\\S$</td>\n<td><code>\\S</code></td>\n<td>$\\aleph$</td>\n<td><code>\\aleph</code></td>\n<td>$\\LaTeX$</td>\n<td><code>\\LaTeX</code></td>\n</tr>\n<tr>\n<td>$\\ldots$</td>\n<td><code>\\ldots</code></td>\n<td>$\\ddots$</td>\n<td><code>\\ddots</code></td>\n<td>$\\cdots$</td>\n<td><code>\\cdots</code></td>\n</tr>\n<tr>\n<td>$\\vdots$</td>\n<td><code>\\vdots</code></td>\n<td>$\\imath$</td>\n<td><code>\\imath</code></td>\n<td>$\\jmath$</td>\n<td><code>\\jmath</code></td>\n</tr>\n<tr>\n<td>$\\ell$</td>\n<td><code>\\ell</code></td>\n<td>$\\wp$</td>\n<td><code>\\wp</code></td>\n<td>$\\Re$</td>\n<td><code>\\Re</code></td>\n</tr>\n<tr>\n<td>$\\Im$</td>\n<td><code>\\Im</code></td>\n<td>$\\Diamond$</td>\n<td><code>\\Diamond</code></td>\n<td>$\\diamondsuit$</td>\n<td><code>\\diamondsuit</code></td>\n</tr>\n<tr>\n<td>$\\prime$</td>\n<td><code>\\prime</code></td>\n<td>$\\emptyset$</td>\n<td><code>\\emptyset</code></td>\n<td>$\\nabla$</td>\n<td><code>\\nabla</code></td>\n</tr>\n<tr>\n<td>$\\surd$</td>\n<td><code>\\surd</code></td>\n<td>$\\top$</td>\n<td><code>\\top</code></td>\n<td>$\\bot$</td>\n<td><code>\\bot</code></td>\n</tr>\n<tr>\n<td>$\\backslash$</td>\n<td><code>\\backslash</code></td>\n<td>$\\partial$</td>\n<td><code>\\partial</code></td>\n<td>$\\infty$</td>\n<td><code>\\infty</code></td>\n</tr>\n<tr>\n<td>$\\triangle$</td>\n<td><code>\\triangle</code></td>\n<td>$\\heartsuit$</td>\n<td><code>\\heartsuit</code></td>\n<td>$\\circledS$</td>\n<td><code>\\circledS</code></td>\n</tr>\n<tr>\n<td>$\\hbar$</td>\n<td><code>\\hbar</code></td>\n<td>$\\forall$</td>\n<td><code>\\forall</code></td>\n<td>$\\exists$</td>\n<td><code>\\exists</code></td>\n</tr>\n<tr>\n<td>$\\neg$</td>\n<td><code>\\neg</code></td>\n<td>$\\flat$</td>\n<td><code>\\flat</code></td>\n<td>$\\natural$</td>\n<td><code>\\natural</code></td>\n</tr>\n<tr>\n<td>$\\sharp$</td>\n<td><code>\\sharp</code></td>\n<td>$\\angle$</td>\n<td><code>\\angle</code></td>\n<td>$\\mho$</td>\n<td><code>\\mho</code></td>\n</tr>\n<tr>\n<td>$\\Box$</td>\n<td><code>\\Box</code></td>\n<td>$\\clubsuit$</td>\n<td><code>\\clubsuits</code></td>\n<td>$\\spadesuit$</td>\n<td><code>\\spadesuit</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"7-希腊字母-Greek-Letters-显示表\"><a href=\"#7-希腊字母-Greek-Letters-显示表\" class=\"headerlink\" title=\"7.希腊字母(Greek Letters)显示表\"></a>7.希腊字母(Greek Letters)显示表</h3><table>\n<thead>\n<tr>\n<th>拉丁字母</th>\n<th>小写显示方法</th>\n<th>大写显示方法</th>\n<th>大写字母</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$\\alpha$</td>\n<td><code>\\alpha</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\beta$</td>\n<td><code>\\beta</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\gamma$</td>\n<td><code>\\gamma</code></td>\n<td><code>\\Gamma</code></td>\n<td>$\\Gamma$</td>\n</tr>\n<tr>\n<td>$\\delta$</td>\n<td><code>\\delta</code></td>\n<td><code>\\Delta</code></td>\n<td>$\\Delta$</td>\n</tr>\n<tr>\n<td>$\\epsilon$</td>\n<td><code>\\epsilon</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\zeta$</td>\n<td><code>\\zeta</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\eta$</td>\n<td><code>\\eta</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\theta$</td>\n<td><code>\\theta</code></td>\n<td><code>\\Theta</code></td>\n<td>$\\Theta$</td>\n</tr>\n<tr>\n<td>$\\iota$</td>\n<td><code>\\iota</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\kappa$</td>\n<td><code>\\kappa</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\lambda$</td>\n<td><code>\\lambda</code></td>\n<td><code>\\lambda</code></td>\n<td>$\\lambda$</td>\n</tr>\n<tr>\n<td>$\\mu$</td>\n<td><code>\\mu</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\nu$</td>\n<td><code>\\nu</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\xi$</td>\n<td><code>\\xi</code></td>\n<td><code>\\Xi</code></td>\n<td>$\\Xi$</td>\n</tr>\n<tr>\n<td>$\\omicron$</td>\n<td><code>\\omicron</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\pi$</td>\n<td><code>\\pi</code></td>\n<td><code>\\Pi</code></td>\n<td>$\\Pi$</td>\n</tr>\n<tr>\n<td>$\\rho$</td>\n<td><code>\\rho</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\sigma$</td>\n<td><code>\\sigma</code></td>\n<td><code>\\Sigma</code></td>\n<td>$\\Sigma$</td>\n</tr>\n<tr>\n<td>$\\tau$</td>\n<td><code>\\tau</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\upsilon$</td>\n<td><code>\\upsilon</code></td>\n<td><code>\\Upsilon</code></td>\n<td>$\\Upsilon$</td>\n</tr>\n<tr>\n<td>$\\phi$</td>\n<td><code>\\phi</code></td>\n<td><code>\\Phi</code></td>\n<td>$\\Phi$</td>\n</tr>\n<tr>\n<td>$\\chi$</td>\n<td><code>\\chi</code></td>\n<td>——</td>\n<td>——</td>\n</tr>\n<tr>\n<td>$\\psi$</td>\n<td><code>\\psi</code></td>\n<td><code>\\Psi</code></td>\n<td>$\\Psi$</td>\n</tr>\n<tr>\n<td>$\\omega$</td>\n<td><code>\\omega</code></td>\n<td><code>\\Omega</code></td>\n<td>$\\Omega$</td>\n</tr>\n</tbody></table>\n<p><em>注意：将小写字母的首字母大写表示为大写拉丁字母</em></p>\n<h3 id=\"8-常用结构例子\"><a href=\"#8-常用结构例子\" class=\"headerlink\" title=\"8.常用结构例子\"></a>8.常用结构例子</h3><h4 id=\"例1\"><a href=\"#例1\" class=\"headerlink\" title=\"例1\"></a>例1</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">\\begin&#123;align&#125;</span><br><span class=\"line\">\\sqrt&#123;37&#125; &amp; = \\sqrt&#123;\\frac&#123;73^2-1&#125;&#123;12^2&#125;&#125; \\\\\\</span><br><span class=\"line\"> &amp; = \\sqrt&#123;\\frac&#123;73^2&#125;&#123;12^2&#125;\\cdot\\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\\\\\ </span><br><span class=\"line\"> &amp; = \\sqrt&#123;\\frac&#123;73^2&#125;&#123;12^2&#125;&#125;\\sqrt&#123;\\frac&#123;73^2-1&#125;&#123;73^2&#125;&#125; \\\\\\</span><br><span class=\"line\"> &amp; = \\frac&#123;73&#125;&#123;12&#125;\\sqrt&#123;1 - \\frac&#123;1&#125;&#123;73^2&#125;&#125; \\\\\\ </span><br><span class=\"line\"> &amp; \\approx \\frac&#123;73&#125;&#123;12&#125;\\left(1 - \\frac&#123;1&#125;&#123;2\\cdot73^2&#125;\\right)</span><br><span class=\"line\"> \\end&#123;align&#125;</span><br></pre></td></tr></table></figure>\n<p>$$\\begin{align}<br>\\sqrt{37} &amp; &#x3D; \\sqrt{\\frac{73^2-1}{12^2}} \\\\<br> &amp; &#x3D; \\sqrt{\\frac{73^2}{12^2}\\cdot\\frac{73^2-1}{73^2}} \\\\<br> &amp; &#x3D; \\sqrt{\\frac{73^2}{12^2}}\\sqrt{\\frac{73^2-1}{73^2}} \\\\<br> &amp; &#x3D; \\frac{73}{12}\\sqrt{1 - \\frac{1}{73^2}} \\\\<br> &amp; \\approx \\frac{73}{12}\\left(1 - \\frac{1}{2\\cdot73^2}\\right)<br>\\end{align}$$</p>\n<h4 id=\"例2\"><a href=\"#例2\" class=\"headerlink\" title=\"例2\"></a>例2</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">        1 &amp; x &amp; x^2 \\\\</span><br><span class=\"line\">        1 &amp; y &amp; y^2 \\\\</span><br><span class=\"line\">        1 &amp; z &amp; z^2 \\\\</span><br><span class=\"line\">\\end&#123;matrix&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\\begin&#123;pmatrix&#125;</span><br><span class=\"line\">        1 &amp; x &amp; x^2 \\\\\\</span><br><span class=\"line\">        1 &amp; y &amp; y^2 \\\\\\</span><br><span class=\"line\">        1 &amp; z &amp; z^2 \\\\\\</span><br><span class=\"line\">\\end&#123;pmatrix&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\\begin&#123;bmatrix&#125;</span><br><span class=\"line\">        1 &amp; x &amp; x^2 \\\\\\</span><br><span class=\"line\">        1 &amp; y &amp; y^2 \\\\\\</span><br><span class=\"line\">        1 &amp; z &amp; z^2 \\\\\\</span><br><span class=\"line\">\\end&#123;bmatrix&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\\begin&#123;Bmatrix&#125;</span><br><span class=\"line\">        1 &amp; x &amp; x^2 \\\\\\</span><br><span class=\"line\">        1 &amp; y &amp; y^2 \\\\\\</span><br><span class=\"line\">        1 &amp; z &amp; z^2 \\\\\\</span><br><span class=\"line\">\\end&#123;Bmatrix&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>$$\\begin{matrix}<br>        1 &amp; x &amp; x^2 \\\\<br>        1 &amp; y &amp; y^2 \\\\<br>        1 &amp; z &amp; z^2 \\\\<br>\\end{matrix}$$<br>$$\\begin{pmatrix}<br>        1 &amp; x &amp; x^2 \\\\<br>        1 &amp; y &amp; y^2 \\\\<br>        1 &amp; z &amp; z^2 \\\\<br>\\end{pmatrix}$$<br>$$\\begin{bmatrix}<br>        1 &amp; x &amp; x^2 \\\\<br>        1 &amp; y &amp; y^2 \\\\<br>        1 &amp; z &amp; z^2 \\\\<br>\\end{bmatrix}$$<br>$$\\begin{Bmatrix}<br>        1 &amp; x &amp; x^2 \\\\<br>        1 &amp; y &amp; y^2 \\\\<br>        1 &amp; z &amp; z^2 \\\\<br>\\end{Bmatrix}$$<br>$$\\begin{vmatrix}<br>        1 &amp; x &amp; x^2 \\\\<br>        1 &amp; y &amp; y^2 \\\\<br>        1 &amp; z &amp; z^2 \\\\<br>\\end{vmatrix}$$</p>\n<h4 id=\"例3\"><a href=\"#例3\" class=\"headerlink\" title=\"例3\"></a>例3</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">\\left[</span><br><span class=\"line\">    \\begin&#123;array&#125;&#123;cc|c&#125;</span><br><span class=\"line\">      1&amp;2&amp;3\\\\\\</span><br><span class=\"line\">      4&amp;5&amp;6</span><br><span class=\"line\">    \\end&#123;array&#125;</span><br><span class=\"line\">\\right]</span><br></pre></td></tr></table></figure>\n<p>$$\\left[<br>    \\begin{array}{cc|c}<br>      1&amp;2&amp;3\\\\<br>      4&amp;5&amp;6<br>    \\end{array}<br>\\right]$$<br>$$\\left[<br>    \\begin{array}{c|cc}<br>        2&amp;4&amp;7\\\\<br>        3&amp;6&amp;34<br>    \\end{array}<br>\\right]\\times\\left[<br>    \\begin{array}{cc|c}<br>      1&amp;2&amp;3\\\\<br>      4&amp;5&amp;6<br>    \\end{array}<br>\\right]$$</p>\n<h4 id=\"例4\"><a href=\"#例4\" class=\"headerlink\" title=\"例4\"></a>例4</h4><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\">f(n) =</span><br><span class=\"line\">\\begin&#123;cases&#125;</span><br><span class=\"line\">n/2,  &amp; \\text&#123;if $n$ is even&#125; \\\\\\</span><br><span class=\"line\">3n+1, &amp; \\text&#123;if $n$ is odd&#125;</span><br><span class=\"line\">\\end&#123;cases&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class=\"line\">n &amp; \\text&#123;Left&#125; &amp; \\text&#123;Center&#125; &amp; \\text&#123;Right&#125; \\\\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">1 &amp; 0.24 &amp; 1 &amp; 125 \\\\\\</span><br><span class=\"line\">2 &amp; -1 &amp; 189 &amp; -8 \\\\\\</span><br><span class=\"line\">3 &amp; -20 &amp; 2000 &amp; 1+10i</span><br><span class=\"line\">\\end&#123;array&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>$$f(n) &#x3D;<br>\\begin{cases}<br>n&#x2F;2,  &amp; \\text{if $n$ is even} \\\\<br>3n+1, &amp; \\text{if $n$ is odd}\\end{cases}$$</p>\n","categories":["Directory"],"tags":["Math","LaTeX","Formula"]},{"title":"Linked list","url":"/post/Linked-list/","content":"<h2 id=\"演示代码\"><a href=\"#演示代码\" class=\"headerlink\" title=\"演示代码\"></a>演示代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;malloc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> data;</span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> <span class=\"title class_\">Node</span>* pNext;</span><br><span class=\"line\">&#125;NODE, * PNODE;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//函数声明</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">travres_list</span><span class=\"params\">(PNODE pHead)</span></span>;</span><br><span class=\"line\"><span class=\"function\">PNODE <span class=\"title\">create_list</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">length_list</span><span class=\"params\">(PNODE pHead)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sort_list</span><span class=\"params\">(PNODE pHead)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">insert_list</span><span class=\"params\">(PNODE pHead, <span class=\"type\">int</span> pos, <span class=\"type\">int</span> val)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">delete_list</span><span class=\"params\">(PNODE phead, <span class=\"type\">int</span> pos, <span class=\"type\">int</span>* val)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">delete_list</span><span class=\"params\">(PNODE phead, <span class=\"type\">int</span> pos, <span class=\"type\">int</span>* val)</span> </span>&#123;</span><br><span class=\"line\">\tPNODE p = phead;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i&#123; <span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (p-&gt;pNext!=<span class=\"literal\">NULL</span>&amp;&amp;i&lt;pos<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tp = p-&gt;pNext;</span><br><span class=\"line\">\t\ti++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p-&gt;pNext == <span class=\"literal\">NULL</span> || i &gt; pos - <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\tPNODE q=p-&gt;pNext;</span><br><span class=\"line\">\t*val = q-&gt;data;</span><br><span class=\"line\">\tp-&gt;pNext = p-&gt;pNext-&gt;pNext;</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(q);</span><br><span class=\"line\">\tq = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">insert_list</span><span class=\"params\">(PNODE pHead, <span class=\"type\">int</span> pos, <span class=\"type\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//PNODE pHead;</span></span><br><span class=\"line\">\tPNODE p = pHead;</span><br><span class=\"line\">\t<span class=\"comment\">//PNODE q=NULL;</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> i&#123; <span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (p!=<span class=\"literal\">NULL</span>&amp;&amp;i&lt;pos<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tp = p-&gt;pNext;</span><br><span class=\"line\">\t\ti++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p == <span class=\"literal\">NULL</span> || i &gt; pos - <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\tPNODE pNew = (PNODE)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(NODE));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pNew) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;分配失败，程序终止&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpNew-&gt;data = val;</span><br><span class=\"line\">\tPNODE q = p-&gt;pNext;</span><br><span class=\"line\">\tp-&gt;pNext = pNew;</span><br><span class=\"line\">\tpNew-&gt;pNext = q;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">sort_list</span><span class=\"params\">(PNODE pHead)</span> </span>&#123;</span><br><span class=\"line\">\tPNODE p ;</span><br><span class=\"line\">\tPNODE q;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (p = pHead-&gt;pNext; p != <span class=\"literal\">NULL</span>; p = p-&gt;pNext) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (q = p-&gt;pNext; q != <span class=\"literal\">NULL</span>; q = q-&gt;pNext) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (p-&gt;data &gt; q-&gt;data) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"type\">int</span> t = q-&gt;data;</span><br><span class=\"line\">\t\t\t\tq-&gt;data = p-&gt;data;</span><br><span class=\"line\">\t\t\t\tp-&gt;data = t;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">length_list</span><span class=\"params\">(PNODE pHead)</span> </span>&#123;</span><br><span class=\"line\">\tPNODE p = pHead-&gt;pNext;</span><br><span class=\"line\">\t<span class=\"type\">int</span> length&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (p!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tlength++;</span><br><span class=\"line\">\t\tp = p-&gt;pNext;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">PNODE <span class=\"title\">create_list</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tPNODE pHead = (PNODE)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(NODE));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pHead) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;分配失败，程序终止&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tPNODE pTail = pHead;</span><br><span class=\"line\">\tpTail-&gt;pNext = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> len&#123; <span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">\tstd::cout &lt;&lt; <span class=\"string\">&quot;请输入你所需要的节点个数：&quot;</span>;</span><br><span class=\"line\">\tstd::cin &gt;&gt; len;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> val;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入第%d节点的值:&quot;</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tstd::cin &gt;&gt; val;</span><br><span class=\"line\">\t\tPNODE pNew = (PNODE)<span class=\"built_in\">malloc</span>(<span class=\"built_in\">sizeof</span>(NODE));</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pNew) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;分配失败，程序终止&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tpNew-&gt;data = val;</span><br><span class=\"line\">\t\tpTail-&gt;pNext = pNew;</span><br><span class=\"line\">\t\tpNew-&gt;pNext = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t\tpTail = pNew;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> pHead;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">travres_list</span><span class=\"params\">(PNODE pHead)</span> </span>&#123;</span><br><span class=\"line\">\tPNODE p = pHead-&gt;pNext;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (p!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, p-&gt;data);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;  &quot;</span>);</span><br><span class=\"line\">\t\tp = p-&gt;pNext;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tPNODE pHead;</span><br><span class=\"line\">\tpHead = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpHead = <span class=\"built_in\">create_list</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">travres_list</span>(pHead);</span><br><span class=\"line\">\t<span class=\"type\">int</span> length = <span class=\"built_in\">length_list</span>(pHead);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;表长为：%d&quot;</span>, length);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//sort_list(pHead);</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//travres_list(pHead);</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//insert_list(pHead,4, 10);</span></span><br><span class=\"line\">\t<span class=\"comment\">//travres_list(pHead);</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> val&#123; <span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"built_in\">delete_list</span>(pHead, <span class=\"number\">1</span>, &amp;val)) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;删除成功，你删除的值为%d&quot;</span>, val);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">travres_list</span>(pHead);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["Data structure"],"tags":["Cpp","Linked"]},{"title":"曲线积分与曲面积分","url":"/post/LineIntegral/","content":"<h2 id=\"曲线积分的基本概念\"><a href=\"#曲线积分的基本概念\" class=\"headerlink\" title=\"曲线积分的基本概念\"></a>曲线积分的基本概念</h2><ul>\n<li>与一重积分,二重积分,三重积分一样,曲线积分的概念也差不多,用质量来理解的话:就是用曲线密度的分布率来求曲线的质量.</li>\n<li>$$\\lim_{\\lambda\\rightarrow0}\\sum^n_{i&#x3D;1}\\mu(\\zeta_i,\\eta_i)\\Delta S_i&#x3D;m$$</li>\n<li>$$\\int_Lf(x,y)ds$$</li>\n</ul>\n<h3 id=\"参数方程的曲面积分\"><a href=\"#参数方程的曲面积分\" class=\"headerlink\" title=\"参数方程的曲面积分\"></a>参数方程的曲面积分</h3><p>其中这个这个$f(x,y)$是被积函数$ds$弧微分,这个一般都是将$x,y$转化为参数方程进行运算也就是<br>$$x&#x3D;\\phi(t)\\\\<br>y&#x3D;\\psi(t)\\\\<br>t\\in[a,b]\\\\<br>\\int_Lf(x,y)ds&#x3D;\\int^\\alpha_\\beta f(\\phi(t),\\psi(t))\\sqrt{\\phi{\\prime}(t)^2+\\psi{\\prime}(t)^2}dt(\\alpha&lt;\\beta)$$</p>\n<h3 id=\"对坐标的曲面积分\"><a href=\"#对坐标的曲面积分\" class=\"headerlink\" title=\"对坐标的曲面积分\"></a>对坐标的曲面积分</h3><ul>\n<li>向量值函数曲线积分的概念(第二类曲线积分)<br>问题:设在光滑平面曲线$C$上有连续的作用力$F(x,y)&#x3D;(P(x,y),Q(x,y))$,求$F$作用于$C$上质点从起点A移动到终点B所做的功为多少?</li>\n</ul>\n<h2 id=\"有几个例子\"><a href=\"#有几个例子\" class=\"headerlink\" title=\"有几个例子\"></a>有几个例子</h2><h3 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h3>","categories":["Calculus"],"tags":["Math"]},{"title":"卷积公式","url":"/post/convolution/","content":"<h2 id=\"前期提示\"><a href=\"#前期提示\" class=\"headerlink\" title=\"前期提示\"></a>前期提示</h2><p>以下东西纯属个人消化</p>\n<h2 id=\"缘由\"><a href=\"#缘由\" class=\"headerlink\" title=\"缘由\"></a>缘由</h2><p>首先说一下写这个东西的原因:就是这个卷积公式的理解一直都是我学习信号与系统的拦路虎,一直无法理解这个是什么东西,终于在今晚弄懂了我滴天啊!</p>\n<h2 id=\"卷积公式的形式\"><a href=\"#卷积公式的形式\" class=\"headerlink\" title=\"卷积公式的形式\"></a>卷积公式的形式</h2><p>首先来看一下这个卷积公式的形式<br><strong>积分形式</strong></p>\n<p>$$(f*g)(n)&#x3D;\\int^{+\\infty}_{-\\infty}f(\\tau)g(n-\\tau)d{\\tau}$$</p>\n<p><strong>离散形式</strong></p>\n<p>$$(f*g)(n)&#x3D;\\sum^{+\\infty}_{-\\infty}f(\\tau)g(n-\\tau)$$</p>\n<span id=\"more\"></span>\n<h2 id=\"翻卷\"><a href=\"#翻卷\" class=\"headerlink\" title=\"翻卷\"></a>翻卷</h2><p>其实吧,我一直没办法就是为什么那个$f(\\tau)$要乘于一个负的$g(n-\\tau)$,我认为关键就是理解的这个$-\\tau$,理解了这个就理解了整个公式.</p>\n<h2 id=\"举一个例子\"><a href=\"#举一个例子\" class=\"headerlink\" title=\"举一个例子\"></a>举一个例子</h2><h3 id=\"扔石头\"><a href=\"#扔石头\" class=\"headerlink\" title=\"扔石头\"></a>扔石头</h3><p>往水面仍石头,我们把水面的反应当成的一个冲击反应,我们在t&#x3D;0时,扔下一个石头会激起一个h(0)的波纹,但是水面不会立刻平静,随着时间的流逝，波纹幅度会越来越小，在t&#x3D;1时刻，幅度衰减为h(1), 在t&#x3D;2时刻，幅度衰减为h(2)……直到一段时间后，水面重复归于平静.</p>\n<p>从时间轴上来看，我们只在t&#x3D;0时刻丢了一块石头，其它时刻并没有做任何事，但在t&#x3D;1,2….时刻，水面是不平静的，这是因为过去（t&#x3D;0时刻）的作用一直持续到了现在。那么，问题来了：如果我们在t&#x3D;1时刻也丢入一块石子呢？此时t&#x3D;0时刻的影响还没有消失（水面还没有恢复平静）新的石子又丢进来了，那么现在激起的波浪有多高呢？答案是当前激起的波浪与t&#x3D;0时刻残余的影响的叠加。那么t&#x3D;0时刻对t&#x3D;1时刻的残余影响有多大呢？为了便于说明，接下来我们作一下两个假设：</p>\n<ul>\n<li>1．  水面对于“单位石块”的响应是固定的.</li>\n<li>2．  丢一个两倍于的“单位石块”的石块激起的波纹高度是丢一个石块的两倍（即系统满足线性叠加原理）现在我们来计算每一时刻的波浪有多高:</li>\n</ul>\n<p>那么我们一个时刻就扔一个石头,t&#x3D;0,t&#x3D;1,t&#x3D;2时,以此类推.那么我们来算一下每个时水面的反应:</p>\n<p>y为水面的反应,x为石子,h为水面的激起波澜的函数</p>\n<ul>\n<li><p>t&#x3D;0时:<br>y(0)&#x3D;x(0)*h(0)&#x2F;&#x2F;t0时刻一个石子在h0时刻激起y0</p>\n</li>\n<li><p>t&#x3D;1时<br>y(1)&#x3D;x(1)*h(0)+x(0)*h(1)&#x2F;&#x2F;这个就是当前石子激起h(0),和之前那个x(0)那个的残余的叠加</p>\n</li>\n<li><p>t&#x3D;2时:<br>y(2)&#x3D;x(2)*h(0)+x(1)*h(1)+x(0)*h(2)</p>\n</li>\n</ul>\n<p>以此类推</p>\n<ul>\n<li>t&#x3D;n 时:<br>y(n)&#x3D;x(n)*h(0)+x(n-1)*h(1)+x(n-2)*h(2)+…+x(0)*h(n)</li>\n</ul>\n<p>推到这一步把用累加符号弄在一起你会惊讶的发现,我擦这个不就是说这个吗?<br>$\\sum_{i&#x3D;0}^nx(i)<em>h(n-i)$是不是很是相像$(f</em>g)(n)&#x3D;\\sum^{+\\infty}_{-\\infty}f(\\tau)g(n-\\tau)$<br>.这就是离散卷积的公式了理解了上面的问题，下面我们来看看“翻转”是怎么回事：当我们每次要丢石子时，站在当前的时间点，系统的对我们的回应都是h(0),时间轴之后的（h(1),h(2)…..）都是对未来的影响。而整体的回应要加上过去对于现在的残余影响。现在我们来观察t&#x3D;4这个时刻.</p>\n<ul>\n<li>站在t&#x3D;0时刻看他对于未来（t&#x3D;4）时刻(从现在往后4秒)的影响，可见是x(0)*h(4)</li>\n<li>站在t&#x3D;1时刻看他对于未来（t&#x3D;4）时刻的影响(从现在往后3秒)，可见是x(1)*h(3)</li>\n<li>站在t&#x3D;2时刻看他对于未来（t&#x3D;4）时刻的影响(从现在往后2秒)，可见是x(2)*h(2)</li>\n<li>站在t&#x3D;3时刻看他对于未来（t&#x3D;4）时刻的影响(从现在往后1秒)，可见是x(3)*h(1)</li>\n</ul>\n<p>图示:</p>\n<p><img src=\"/../assets/convolution.png\" alt=\"&quot;示意图&quot;\"></p>\n<p>你将第一幅和第三幅对应的乘起来是不是就是那个<br>y(4)&#x3D;x(4)*h(0)+x(3)*h(1)+x(2)*h(2)+x(1)*h(3)+x(0)*h(4)</p>\n<h2 id=\"结论-所以所谓的翻转只是因为你站立的现在是过去的未来-所谓卷积其实就是过去对现在影响的叠加\"><a href=\"#结论-所以所谓的翻转只是因为你站立的现在是过去的未来-所谓卷积其实就是过去对现在影响的叠加\" class=\"headerlink\" title=\"结论:所以所谓的翻转只是因为你站立的现在是过去的未来,所谓卷积其实就是过去对现在影响的叠加.\"></a>结论:所以所谓的翻转只是因为你站立的现在是过去的未来,所谓卷积其实就是过去对现在影响的叠加.</h2>","categories":["Math test"],"tags":["Math","Fourier"]},{"title":"Math Test","url":"/post/math-test/","content":"<p>$\\displaystyle\\int^{\\infty}_{0}{xdx}$</p>\n<p>$\\frac{\\partial x}{\\partial y}$</p>\n<p>$\\dfrac{\\dfrac 1 x+1}{3x+2}$</p>\n<p>$\\sqrt[4] 2$</p>\n<p>$\\times,\\cdot,\\div$</p>\n<p>$\\alpha,\\beta,\\gamma,\\delta,\\epsilon,\\zeta,\\mu,\\sin x^2$</p>\n<p>$$f(x)&#x3D;\\frac{P(x)}{Q(x)}$$</p>\n<p>$2x - 5y &#x3D;  8$<br>$3x + 9y &#x3D;  -12$<br>$7x \\times 2y \\neq 3z$</p>\n<p>$$<br>\\sum_{n&#x3D;1}^\\infty \\frac{3x^3+3}{2x^4+4}<br>$$</p>\n<p>$$\\lim\\limits_{x\\to\\infty} x^2&#x2F;3&#x3D;0<br>$$<br>$$\\begin{matrix}<br>   1 &amp; 2 &amp; 3 \\\\<br>   4 &amp; 5 &amp; 6 \\\\<br>   7 &amp; 8 &amp; 9<br>  \\end{matrix}$$</p>\n","categories":["Math test"],"tags":["Math","Formula"]},{"title":"1009说反话","url":"/post/pat1009/","content":"<h2 id=\"题目详情\"><a href=\"#题目详情\" class=\"headerlink\" title=\"题目详情:\"></a>题目详情:</h2><blockquote>\n<p>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。<br>输入格式：<br>测试输入包含一个测试用例，在一行内给出总长度不超过 80 的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用 1 个空格分开，输入保证句子末尾没有多余的空格。<br>输出格式：<br>每个测试用例的输出占一行，输出倒序后的句子。</p>\n</blockquote>\n<ul>\n<li><p>输入样例：</p>\n<blockquote>\n<p>Hello World Here I Come</p>\n</blockquote>\n</li>\n<li><p>输出样例:</p>\n<blockquote>\n<p>Come I Here World Hello</p>\n</blockquote>\n<span id=\"more\"></span></li>\n</ul>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><blockquote>\n<p>这个题主要是讲反向输出,可以把每个单词的后面的空格作为分界线,再用一个Vector容器把每个单词装起来,再进行反向输出即可.</p>\n</blockquote>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    vector&lt;string&gt; d;<span class=\"comment\">//创建一个容器用来装每个单词</span></span><br><span class=\"line\">    string input;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin,input);<span class=\"comment\">//输入数据</span></span><br><span class=\"line\">    string tem=<span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">//创建一个临时的字符串来装每一个单词</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;input.<span class=\"built_in\">size</span>();i++)&#123;<span class=\"comment\">//遍历所有字母</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(input[i]==<span class=\"string\">&#x27;\\n&#x27;</span>)<span class=\"keyword\">break</span>;<span class=\"comment\">//到最后了退出</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(input[i]!=<span class=\"string\">&#x27; &#x27;</span>)tem +=input[i];<span class=\"comment\">//还在当前单词中输入</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            d.<span class=\"built_in\">push_back</span>(tem);<span class=\"comment\">//把它压进容器</span></span><br><span class=\"line\">            tem=<span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">//临时字符再初始化去装下一个单词</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    d.<span class=\"built_in\">push_back</span>(tem);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=d.<span class=\"built_in\">size</span>()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;<span class=\"comment\">//反向输出</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i!=<span class=\"number\">0</span>)cout&lt;&lt;d[i]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> cout&lt;&lt;d[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":["PAT"],"tags":["Cpp","PAT"]},{"title":"1010 A+B 和 C","url":"/post/pat1011/","content":"<h2 id=\"题目详情\"><a href=\"#题目详情\" class=\"headerlink\" title=\"题目详情\"></a>题目详情</h2><blockquote>\n<p>给定区间$[-2^{31},2^{31}]$内的 3 个整数 A、B 和 C，请判断 A+B 是否大于 C。</p>\n</blockquote>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3><blockquote>\n<p>输入第 1 行给出正整数 T (≤10)，是测试用例的个数。随后给出 T 组测试用例，每组占一行，顺序给出 A、B 和 C。整数间以空格分隔。</p>\n</blockquote>\n<h3 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式:\"></a>输出格式:</h3><blockquote>\n<p>对每组测试用例，在一行中输出 Case #X: true 如果 A+B&gt;C，否则输出 Case #X: false，其中 X 是测试用例的编号（从 1 开始）。</p>\n</blockquote>\n<h3 id=\"输入样例\"><a href=\"#输入样例\" class=\"headerlink\" title=\"输入样例:\"></a>输入样例:</h3><blockquote>\n<p>4<br>1 2 3<br>2 3 4<br>2147483647 0 2147483646<br>0 -2147483648 -2147483647</p>\n</blockquote>\n<h3 id=\"输出样例\"><a href=\"#输出样例\" class=\"headerlink\" title=\"输出样例:\"></a>输出样例:</h3><blockquote>\n<p>Case #1: false<br>Case #2: true<br>Case #3: true<br>Case #4: false</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><ul>\n<li>这题没啥可说的,主要是注意把把变量开到最大范围即可,还有那个Case#X,这个X变量的表示用printf那个输入.</li>\n</ul>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">Compare</span><span class=\"params\">(<span class=\"type\">long</span> <span class=\"type\">long</span> a,<span class=\"type\">long</span> <span class=\"type\">long</span> b,<span class=\"type\">long</span> <span class=\"type\">long</span> c)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a+b&gt;c)<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"type\">int</span> i=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i&lt;=n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"type\">long</span> a,b,c;</span><br><span class=\"line\">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">Compare</span>(a,b,c))&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Case #%d: true&quot;</span>,i);</span><br><span class=\"line\">            cout&lt;&lt;endl;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Case #%d: false&quot;</span>,i);</span><br><span class=\"line\">            cout&lt;&lt;endl;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":["PAT"],"tags":["Cpp","PAT"]},{"title":"vector<>v,vector<>v(),vector<>v[]","url":"/post/vector-v-vecotr-v-vector-v/","content":"","categories":["Cpp"],"tags":["Difficult points"]}]